{
  "id": "csharp/collection-initialization",
  "title": "Collection Initialization",
  "description": "Traditional and modern approaches to creating and initializing collections using constructors, target-typed new expressions, and collection initializer syntax.",
  "keywords": [
    {
      "name": "collection initialization",
      "score": 4.58
    },
    {
      "name": "collection type",
      "score": 4.54
    },
    {
      "name": "initialization patterns",
      "score": 4.54
    },
    {
      "name": "9.0",
      "score": 4.52
    },
    {
      "name": "collection initializer syntax",
      "score": 4.52
    },
    {
      "name": "data management",
      "score": 4.52
    },
    {
      "name": "dictionary initializers",
      "score": 4.52
    },
    {
      "name": "performance considerations",
      "score": 4.52
    },
    {
      "name": "target-typed new",
      "score": 4.52
    },
    {
      "name": "target-typed new expressions",
      "score": 4.52
    },
    {
      "name": "target-typed",
      "score": 3.05
    },
    {
      "name": "approach",
      "score": 3.03
    }
  ],
  "edges": [
    {
      "target": "/csharp/object-initialization",
      "similarity": 0.8825,
      "authority": null
    },
    {
      "target": "/csharp/collection-expressions",
      "similarity": 0.8672,
      "authority": null
    },
    {
      "target": "/csharp/csharp-14-features",
      "similarity": 0.78,
      "authority": null
    },
    {
      "target": "/libraries/dotnet-10-library-improvements",
      "similarity": 0.7191,
      "authority": null
    },
    {
      "target": "/libraries",
      "similarity": 0.6949,
      "authority": null
    },
    {
      "target": "/libraries/system-text-json",
      "similarity": 0.6831,
      "authority": null
    },
    {
      "target": "/dotnet",
      "similarity": 0.6516,
      "authority": null
    },
    {
      "target": "/cli/assembly-trimming",
      "similarity": 0.6366,
      "authority": null
    },
    {
      "target": "/cli/file-based-apps",
      "similarity": 0.6257,
      "authority": null
    },
    {
      "target": "/cli",
      "similarity": 0.5979,
      "authority": null
    },
    {
      "target": "/cli/build-and-compilation",
      "similarity": 0.5934,
      "authority": null
    },
    {
      "target": "/extensions/microsoft-extensions-ai",
      "similarity": 0.5802,
      "authority": null
    }
  ],
  "apis": [
    {
      "name": "Add",
      "type": "method",
      "count": 15
    },
    {
      "name": "AddRange",
      "type": "method",
      "count": 5
    }
  ],
  "diagnostic_codes": [
    "CS0029",
    "CS0143",
    "CS0144",
    "CS0246",
    "CS0266",
    "CS1729"
  ],
  "category": "C# Language",
  "complexity": 0.15,
  "priority": 1,
  "depth_below": 0,
  "topic_count": 0,
  "introduced": {
    "version": "1.0",
    "year": "2000"
  },
  "_links": {
    "self": {
      "name": "self",
      "href": "/csharp/collection-initialization",
      "description": "Traditional and modern approaches to creating and initializing collections using constructors, target-typed new expressions, and collection initializer syntax."
    },
    "parent": {
      "name": "parent",
      "href": "/csharp",
      "description": "Csharp category containing this topic"
    },
    "topic-spec": {
      "name": "Topic Specification",
      "href": "/csharp/collection-initialization/topic-spec.md",
      "description": "Feature relationship definition including hierarchy, generation hints, and critical limitations"
    },
    "golden-reference": {
      "name": "Golden Reference Document",
      "href": "/csharp/collection-initialization/golden-reference.md",
      "description": "Comprehensive reference document serving as validation baseline with complete conceptual explanation, syntax examples, and ecosystem integration"
    },
    "qa-pairs": {
      "name": "Question \u0026 Answer Pairs",
      "href": "/csharp/collection-initialization/qa-pairs.md",
      "description": "Structured Q\u0026A content with JSON frontmatter for programmatic access, difficulty levels, and validation methods"
    }
  },
  "_embedded": {
    "topics": null
  },
  "metadata": {
    "generated": "2025-10-01T15:27:16.2313278Z",
    "generator": "IndexTool/1.0",
    "embedding_model": "Ollama/nomic-embed-text:latest",
    "embedding_dimensions": 768,
    "similarity_metric": "cosine"
  }
}