{
  "id": "cli",
  "title": "CLI",
  "description": "The .NET CLI (Command-Line Interface) is the primary cross-platform toolchain for developing, building, testing, and deploying .NET applications. It provides a unified command-line experience across Windows, macOS, and Linux for all stages of the application development lifecycle.",
  "keywords": [
    ".NET CLI",
    "command-line interface",
    "dotnet commands",
    "cross-platform toolchain",
    "build tools",
    "developer tools"
  ],
  "category": "CLI",
  "complexity": 0.9,
  "priority": 1,
  "depth_below": 1,
  "topic_count": 5,
  "introduced": {
    "version": "1.0",
    "year": "2016"
  },
  "_links": {
    "self": {
      "name": "self",
      "href": "/cli",
      "description": "The .NET CLI (Command-Line Interface) is the primary cross-platform toolchain for developing, building, testing, and deploying .NET applications. It provides a unified command-line experience across Windows, macOS, and Linux for all stages of the application development lifecycle."
    },
    "topic-spec": {
      "name": "Topic Specification",
      "href": "/cli/topic-spec.md",
      "description": "Feature relationship definition including hierarchy, generation hints, and critical limitations"
    },
    "golden-reference": {
      "name": "Golden Reference Document",
      "href": "/cli/golden-reference.md",
      "description": "Comprehensive reference document serving as validation baseline with complete conceptual explanation, syntax examples, and ecosystem integration"
    },
    "validation": {
      "name": "Validation Requirements",
      "href": "/cli/validation.md",
      "description": "Testing requirements and validation rules for content accuracy and code example verification"
    }
  },
  "_embedded": {
    "similar_categories": [
      {
        "category": "cli",
        "similarity_threshold": 0.6898816617464825,
        "topics": [
          {
            "id": "cli/file-based-apps",
            "title": "File-based apps",
            "similarity": 0.7927
          },
          {
            "id": "cli/build-and-compilation",
            "title": "Build and Compilation",
            "similarity": 0.7427
          },
          {
            "id": "cli/publishing-and-deployment",
            "title": "Publishing and Deployment",
            "similarity": 0.6899
          }
        ]
      },
      {
        "category": "dotnet",
        "similarity_threshold": 0.6805562678887216,
        "topics": [
          {
            "id": "dotnet",
            "title": ".NET Platform",
            "similarity": 0.6806
          }
        ]
      },
      {
        "category": "csharp",
        "similarity_threshold": 0.5186713815200625,
        "topics": [
          {
            "id": "csharp",
            "title": "C# Language",
            "similarity": 0.6518
          },
          {
            "id": "csharp/csharp-14-features",
            "title": "C# 14 Language Features",
            "similarity": 0.5187
          }
        ]
      },
      {
        "category": "libraries",
        "similarity_threshold": 0.5113271338423592,
        "topics": [
          {
            "id": "libraries",
            "title": ".NET Libraries",
            "similarity": 0.515
          }
        ]
      }
    ],
    "similar_documents": null,
    "topics": [
      {
        "name": "build-and-compilation",
        "title": "Build and Compilation",
        "category": "CLI",
        "complexity": 0.8,
        "priority": 1,
        "_links": {
          "self": {
            "name": "self",
            "href": "/cli/build-and-compilation",
            "description": "Build and compilation encompasses the development-time workflow of transforming source code into executable binaries, managing dependencies, and preparing projects for testing and deployment. This includes the core commands \u0060dotnet build\u0060, \u0060dotnet restore\u0060, \u0060dotnet clean\u0060, along with MSBuild integration, multi-targeting, and build optimization strategies."
          }
        }
      },
      {
        "name": "publishing-and-deployment",
        "title": "Publishing and Deployment",
        "category": "CLI",
        "complexity": 0.9,
        "priority": 1,
        "_links": {
          "self": {
            "name": "self",
            "href": "/cli/publishing-and-deployment",
            "description": "Publishing and deployment encompasses the distribution-time workflow of preparing .NET applications for production use, including packaging, optimization, and deployment strategies. This covers all publishing modes from framework-dependent to self-contained, single-file, Native AOT, and container deployment, along with the decision matrix for choosing appropriate deployment strategies."
          }
        }
      },
      {
        "name": "assembly-trimming",
        "title": "Assembly Trimming",
        "category": "CLI",
        "complexity": 0.9,
        "priority": 2,
        "_links": {
          "self": {
            "name": "self",
            "href": "/cli/assembly-trimming",
            "description": "Assembly trimming is a size-reduction optimization for self-contained .NET applications that removes unused code from the application and its dependencies. The trimmer performs build-time analysis to identify and eliminate code that is not statically reachable, significantly reducing deployment size while maintaining application functionality."
          }
        }
      },
      {
        "name": "file-based-apps",
        "title": "File-based apps",
        "category": "CLI",
        "complexity": 0.6,
        "priority": 2,
        "_links": {
          "self": {
            "name": "self",
            "href": "/cli/file-based-apps",
            "description": "File-based apps allow developers to run and publish single .cs files directly without creating a traditional project structure. This feature streamlines simple scripting, prototyping, and automation tasks by eliminating project setup overhead while maintaining full .NET runtime capabilities."
          }
        }
      },
      {
        "name": "native-aot",
        "title": "Native AOT",
        "category": "CLI",
        "complexity": 0.9,
        "priority": 2,
        "_links": {
          "self": {
            "name": "self",
            "href": "/cli/native-aot",
            "description": "Native AOT (Ahead-of-Time) compilation is a publishing model that compiles .NET applications directly to native code at build time, eliminating the need for a just-in-time (JIT) compiler at runtime. This results in faster startup times, reduced memory footprint, and self-contained executables that don\u0027t require the .NET runtime to be installed on the target machine."
          }
        }
      }
    ]
  },
  "metadata": {
    "generated": "2025-09-21T00:54:46.4701585Z",
    "generator": "IndexTool/1.0",
    "embedding_model": "Ollama/nomic-embed-text:latest",
    "embedding_dimensions": 768,
    "similarity_metric": "cosine"
  }
}